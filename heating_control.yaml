alias: Heating Control Based on Time and Temperature
description: >
  Controls the heaters in the room (sofa and desk) based on the
  current time and room temperature. Sets the HVAC mode to 'heat' for
  a higher target temperature and to 'idle' for a lower target temperature.
trigger:
  # Temperature drops below 22°C
  - platform: numeric_state
    entity_id: sensor.<entity>_temperature
    below: 22
  # Temperature rises above 20°C
  - platform: numeric_state
    entity_id: sensor.<entity>_temperature
    above: 20
  # Specific times: start and end of defined time ranges
  - platform: time
    at:
      - 'start1'
      - 'end1'
      - 'start2'
      - 'end2'
condition: []
action:
  - choose:
      # Conditions for higher target temperature (23°C)
      - conditions:
          - condition: numeric_state
            entity_id: sensor.<entity>_temperature
            below: 22
          - condition: or
            conditions:
              - condition: time
                after: 'start1'
                before: 'end1'
              - condition: time
                after: 'start2'
                before: 'end2'
        sequence:
          # Set HVAC mode to 'heat' and target temperature to 23°C
          - service: climate.set_hvac_mode
            target:
              entity_id:
                - climate.<entity>
                - climate.<entity>
            data:
              hvac_mode: 'heat'
          - service: climate.set_temperature
            target:
              entity_id:
                - climate.<entity>
                - climate.<entity>
            data:
              temperature: 23
      # Default action: Set target temperature to 20°C and HVAC mode to 'idle'
      - conditions:
          - condition: or
            conditions:
              - condition: not
                conditions:
                  - condition: or
                    conditions:
                      - condition: time
                        after: 'start1'
                        before: 'end1'
                      - condition: time
                        after: 'start2'
                        before: 'end2'
              - condition: numeric_state
                entity_id: sensor.<entity>_temperature
                above: 20
        sequence:
          - service: climate.set_temperature
            target:
              entity_id:
                - climate.<entity>
                - climate.<entity>
            data:
              temperature: 20
          - service: climate.set_hvac_mode
            target:
              entity_id:
                - climate.<entity>
                - climate.<entity>
            data:
              hvac_mode: 'idle'
    default: []
mode: single